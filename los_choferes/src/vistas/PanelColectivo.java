/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package vistas;

import entidades.Colectivo;
import java.awt.Color;
import java.io.IOException;
import java.nio.charset.StandardCharsets;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import javax.swing.JPanel;
import javax.swing.SwingConstants;

/**
 *
 * @author Marcela
 */
public class PanelColectivo extends javax.swing.JPanel {

    Colectivo colectivo;

    public PanelColectivo() {
        initComponents();
    }

    public PanelColectivo(Colectivo colectivo) {
        initComponents();
        this.colectivo = colectivo;
        SpinnerCantPasajeros.setValue(colectivo.getCantidadPasajeros());
        TxtModelo.setText(colectivo.getModelo());
        TxtPatente.setText(colectivo.getPatente());
    }

    public PanelColectivo(Colectivo colectivo, Color color) {
        initComponents();
        this.Fondo.setBackground(color);
        this.colectivo = colectivo;
        SpinnerCantPasajeros.setValue(colectivo.getCantidadPasajeros());
        TxtModelo.setText(colectivo.getModelo());
        TxtPatente.setText(colectivo.getPatente());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    private void mouseEnter(JPanel panel) {
        Color currentColor = panel.getBackground();
        float[] hsb = Color.RGBtoHSB(currentColor.getRed(), currentColor.getGreen(), currentColor.getBlue(), null);
        float brightness = hsb[2];
        float newBrightness = Math.min(brightness + 0.1f, 1.0f);
        Color newColor = Color.getHSBColor(hsb[0], hsb[1], newBrightness);
        panel.setBackground(newColor);
    }

    private void mouseExit(JPanel panel) {
        Color currentColor = panel.getBackground();
        float[] hsb = Color.RGBtoHSB(currentColor.getRed(), currentColor.getGreen(), currentColor.getBlue(), null);
        float brightness = hsb[2];
        float newBrightness = Math.max(brightness - 0.1f, 0.0f);
        Color newColor = Color.getHSBColor(hsb[0], hsb[1], newBrightness);
        panel.setBackground(newColor);
    }

    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Fondo = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        SpinnerCantPasajeros = new javax.swing.JSpinner();
        TxtModelo = new javax.swing.JTextField();
        TxtPatente = new javax.swing.JTextField();
        PanelBtnEditarColectivo = new javax.swing.JPanel();
        BtnEditarColectivo = new javax.swing.JLabel("Editar", SwingConstants.CENTER);

        Fondo.setBackground(new java.awt.Color(248, 248, 255));
        Fondo.setPreferredSize(new java.awt.Dimension(446, 249));
        Fondo.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("Capacidad de pasajeros:");
        Fondo.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, 30));

        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("Modelo:");
        Fondo.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, -1, 30));

        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setText("Patente:");
        Fondo.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, -1, 30));
        Fondo.add(SpinnerCantPasajeros, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 10, 270, 30));
        Fondo.add(TxtModelo, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 50, 270, 30));

        TxtPatente.setEditable(false);
        Fondo.add(TxtPatente, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 90, 270, 30));

        PanelBtnEditarColectivo.setBackground(new java.awt.Color(64, 121, 140));

        BtnEditarColectivo.setForeground(new java.awt.Color(255, 255, 255));
        BtnEditarColectivo.setText("Editar");
        BtnEditarColectivo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BtnEditarColectivoMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                BtnEditarColectivoMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                BtnEditarColectivoMouseExited(evt);
            }
        });

        javax.swing.GroupLayout PanelBtnEditarColectivoLayout = new javax.swing.GroupLayout(PanelBtnEditarColectivo);
        PanelBtnEditarColectivo.setLayout(PanelBtnEditarColectivoLayout);
        PanelBtnEditarColectivoLayout.setHorizontalGroup(
            PanelBtnEditarColectivoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelBtnEditarColectivoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(BtnEditarColectivo, javax.swing.GroupLayout.DEFAULT_SIZE, 88, Short.MAX_VALUE)
                .addContainerGap())
        );
        PanelBtnEditarColectivoLayout.setVerticalGroup(
            PanelBtnEditarColectivoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelBtnEditarColectivoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(BtnEditarColectivo, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE)
                .addContainerGap())
        );

        Fondo.add(PanelBtnEditarColectivo, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 200, 100, 40));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(Fondo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Fondo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void BtnEditarColectivoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BtnEditarColectivoMouseClicked
        // TODO add your handling code here:
        // Obtener los valores editados
        int cantidadPasajeros = (int) SpinnerCantPasajeros.getValue();
        String modelo = TxtModelo.getText();
        String patente = TxtPatente.getText();

        try {
            Path archivoColectivos = Paths.get("persistencia/colectivos.csv"); // Ruta de tu archivo CSV de colectivos

            // Leer todas las líneas del archivo CSV
            var lineas = Files.readAllLines(archivoColectivos, StandardCharsets.UTF_8);

            // Buscar la línea correspondiente al colectivo actual y reemplazarla con los nuevos valores
            for (int i = 0; i < lineas.size(); i++) {
                String linea = lineas.get(i);
                String[] valores = linea.split(",");

                // Comparar la patente o cualquier otro identificador único del colectivo
                if (valores[3].equals(patente)) {
                    // Reemplazar los valores editados
                    valores[1] = String.valueOf(cantidadPasajeros);
                    valores[2] = modelo;

                    // Crear una nueva línea con los valores actualizados
                    String nuevaLinea = String.join(",", valores);

                    // Reemplazar la línea antigua con la nueva línea
                    lineas.set(i, nuevaLinea);

                    break; // Salir del bucle una vez que se haya encontrado y actualizado la línea
                }
            }

            // Escribir todas las líneas actualizadas en el archivo CSV
            Files.write(archivoColectivos, lineas, StandardCharsets.UTF_8);

            System.out.println("Valores editados guardados correctamente en el archivo CSV.");
        } catch (IOException e) {
            System.err.println("Error al guardar los valores editados en el archivo CSV: " + e.getMessage());
        }
    }//GEN-LAST:event_BtnEditarColectivoMouseClicked

    private void BtnEditarColectivoMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BtnEditarColectivoMouseEntered
        // TODO add your handling code here:
        mouseEnter(PanelBtnEditarColectivo);
    }//GEN-LAST:event_BtnEditarColectivoMouseEntered

    private void BtnEditarColectivoMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BtnEditarColectivoMouseExited
        // TODO add your handling code here:
        mouseExit(PanelBtnEditarColectivo);
    }//GEN-LAST:event_BtnEditarColectivoMouseExited


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel BtnEditarColectivo;
    private javax.swing.JPanel Fondo;
    private javax.swing.JPanel PanelBtnEditarColectivo;
    private javax.swing.JSpinner SpinnerCantPasajeros;
    private javax.swing.JTextField TxtModelo;
    private javax.swing.JTextField TxtPatente;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    // End of variables declaration//GEN-END:variables
}
